{"version":3,"sources":["angular-metro.min.js"],"names":["angular","module","metroCountdownIsNotDeclarative","element","attrs","isDefined","labels","onTick","onStop","metroCountdownTemplate","metroCountdownLink","scope","options","vm","days","hours","minutes","seconds","onTickCallback","$apply","onStopCallback","children","countdown","metroCountdownDirective","restrict","transclude","bindToController","controllerAs","template","metroCountdownScope","link","controller","directive","backgroundColor","digitColor","dividerColor","labelColor"],"mappings":"CAAA,WACCA,QAAQC,OAAO,uBAEhB,WAoBC,QAASC,GAA+BC,EAASC,GAChD,MAAOJ,SAAQK,UAAUD,EAAME,QAAUF,EAAMG,QAAUH,EAAMI,QAIhE,QAASC,GAAuBN,EAASC,GACxC,MAAIF,GAA+BC,EAASC,GACpC,gCAEA,sVAIT,QAASM,GAAmBC,EAAOR,EAASC,GAC3C,GAAIF,EAA+BC,EAASC,GAAQ,CACnD,GAAIQ,GAAUD,EAAME,EAEpBD,GAAQL,OAAS,SAASO,EAAMC,EAAOC,EAASC,GAC/CN,EAAME,GAAGK,gBACRJ,KAAQA,EACRC,MAASA,EACTC,QAAWA,EACXC,QAAWA,IAEZN,EAAMQ,UAGPP,EAAQJ,OAAS,WAChBG,EAAME,GAAGO,iBACTT,EAAMQ,UAGPhB,EAAQkB,SAAS,GAAGC,UAAUV,IAKhC,QAASW,KACR,OACCC,SAAU,KACVC,YAAY,EACZC,kBAAkB,EAClBC,aAAc,KACdC,SAAUnB,EACVE,MAAOkB,EACPC,KAAMpB,EACNqB,WAAY,cAjEd/B,QAAQC,OAAO,iBACb+B,UAAU,iBAAkBT,EAG9B,IAAIM,IACHf,KAAQ,IACRC,MAAS,IACTC,QAAW,IACXC,QAAW,IACXgB,gBAAmB,IACnBC,WAAc,IACdC,aAAgB,IAChBC,WAAc,IACd9B,OAAU,IACVY,eAAkB,UAClBE,eAAkB","file":"angular-metro.min.js","sourcesContent":["(function() {\n\tangular.module(\"angular-metro\", []);\n})();\n(function() {\n\tangular.module(\"angular-metro\")\n\t\t.directive(\"metroCountdown\", metroCountdownDirective);\n\n\t// Directive's bindable attributes.\n\tvar metroCountdownScope = {\n\t\t'days': '=',\n\t\t'hours': '=',\n\t\t'minutes': '=',\n\t\t'seconds': '=',\n\t\t'backgroundColor': '@',\n\t\t'digitColor': '@',\n\t\t'dividerColor': '@',\n\t\t'labelColor': '@',\n\t\t'labels': '=',\n\t\t'onTickCallback': '&onTick',\n\t\t'onStopCallback': '&onStop',\n\t};\n\n\t// Determines whether declarative style is useless.\n\tfunction metroCountdownIsNotDeclarative(element, attrs) {\n\t\treturn angular.isDefined(attrs.labels || attrs.onTick || attrs.onStop);\n\t}\n\n\t// Returns directive's template.\n\tfunction metroCountdownTemplate(element, attrs) {\n\t\tif (metroCountdownIsNotDeclarative(element, attrs))\n\t\t\treturn '<div class=\"countdown\"></div>';\n\t\telse\n\t\t\treturn '<div class=\"countdown\" data-role=\"countdown\" data-days=\"{{ vm.days }}\" data-hours=\"{{ vm.hours }}\" data-minutes=\"{{ vm.minutes }}\" data-seconds=\"{{ vm.seconds }}\" data-background-color=\"{{ vm.backgroundColor }}\" data-digit-color=\"{{ vm.digitColor }}\" data-divider-color=\"{{ vm.dividerColor }}\" data-label-color=\"{{ vm.labelColor }}\"></div>';\n\t}\n\n\t// Inits element with JavaScript style.\n\tfunction metroCountdownLink(scope, element, attrs) {\n\t\tif (metroCountdownIsNotDeclarative(element, attrs)) {\n\t\t\tvar options = scope.vm;\n\n\t\t\toptions.onTick = function(days, hours, minutes, seconds) {\n\t\t\t\tscope.vm.onTickCallback({\n\t\t\t\t\t'days': days,\n\t\t\t\t\t'hours': hours,\n\t\t\t\t\t'minutes': minutes,\n\t\t\t\t\t'seconds': seconds\n\t\t\t\t});\n\t\t\t\tscope.$apply();\n\t\t\t};\n\n\t\t\toptions.onStop = function() {\n\t\t\t\tscope.vm.onStopCallback();\n\t\t\t\tscope.$apply();\n\t\t\t};\n\n\t\t\telement.children(0).countdown(options);\n\t\t}\n\t}\n\n\t// Returns directive's definition object.\n\tfunction metroCountdownDirective() {\n\t\treturn {\n\t\t\trestrict: 'AE',\n\t\t\ttransclude: false,\n\t\t\tbindToController: true,\n\t\t\tcontrollerAs: 'vm',\n\t\t\ttemplate: metroCountdownTemplate,\n\t\t\tscope: metroCountdownScope,\n\t\t\tlink: metroCountdownLink,\n\t\t\tcontroller: function() {}\n\t\t};\n\t}\n})();"],"sourceRoot":"/source/"}